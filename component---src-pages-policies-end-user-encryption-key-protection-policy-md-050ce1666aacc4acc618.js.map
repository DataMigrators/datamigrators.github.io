{"version":3,"file":"component---src-pages-policies-end-user-encryption-key-protection-policy-md-050ce1666aacc4acc618.js","mappings":"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","sources":["webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://example/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://example/./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack://example/./src/pages/policies/end_user_encryption_key_protection_policy.md"],"sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--b8JtW\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--WwZFh\";\nexport var darkMode = \"PageHeader-module--dark-mode--WCeH8\";\nexport var pageHeader = \"PageHeader-module--page-header--NqfPe\";\nexport var text = \"PageHeader-module--text--Er2EO\";\nexport var withTabs = \"PageHeader-module--with-tabs--vbQ-W\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--uI0cF\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--HxjcS\";\nexport var link = \"EditLink-module--link--IDrl1\";\nexport var row = \"EditLink-module--row--BEmSX\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--OC59x\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--5I6-L\";\nexport var link = \"PageTabs-module--link--Kz-7R\";\nexport var list = \"PageTabs-module--list--xLqxG\";\nexport var listItem = \"PageTabs-module--list-item--024o6\";\nexport var selectedItem = \"PageTabs-module--selected-item--aBB0K\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--Cdfzw\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--QgCc7\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--kel8a\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";\nexport var text = \"last-modified-date-module--text--ogPQF\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/johnmckeever/Projects/github.com/datamigrators.github.io/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`This page describes Data Migrators’ policy around the ways end users protect their enryption keys.`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Overview</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Purpose</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Scope</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Policy</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Policy Compliance</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Exceptions</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Non-compliance</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Related Documents</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Definitions and Terms</AnchorLink>\n    </AnchorLinks>\n    <h2>{`Overview`}</h2>\n    <p>{`See purpose.`}</p>\n    <h2>{`Purpose`}</h2>\n    <p>{`Encryption Key Management, if not done properly, can lead to compromise\nand disclosure of private keys use to secure sensitive data and hence,\ncompromise of the data. While users may understand it’s important to\nencryption certain documents and electronic communications, they may not\nbe familiar with minimum standards for protection encryption keys.`}</p>\n    <h2>{`Purpose`}</h2>\n    <p>{`This policy outlines the requirements for protecting encryption keys\nthat are under the control of end users. These requirements are designed\nto prevent unauthorized disclosure and subsequent fraudulent use. The\nprotection methods outlined will include operational and technical\ncontrols, such as key backup procedures, encryption under a separate key\nand use of tamper-resistant hardware.`}</p>\n    <h2>{`Scope`}</h2>\n    <p>{`This policy applies to any encryption keys listed below and to the\nperson responsible for any encryption key listed below. The encryption\nkeys covered by this policy are:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`encryption keys issued by Data Migrators`}</li>\n      <li parentName=\"ul\">{`encryption keys used for Data Migrators business`}</li>\n      <li parentName=\"ul\">{`encryption keys used to protect data owned by Data Migrators`}</li>\n    </ul>\n    <p>{`The public keys contained in digital certificates are specifically\nexempted from this policy.`}</p>\n    <h2>{`Policy`}</h2>\n    <p>{`All encryption keys covered by this policy must be protected to prevent\ntheir unauthorized disclosure and subsequent fraudulent use.`}</p>\n    <h3>{`Secret Key Encryption Keys`}</h3>\n    <p>{`Keys used for secret key encryption, also called symmetric cryptography,\nmust be protected as they are distributed to all parties that will use\nthem. During distribution, the symmetric encryption keys must be\nencrypted using a stronger algorithm with a key of the longest key\nlength for that algorithm authorized in Data Migrators’ `}<em parentName=\"p\">{`Acceptable\nEncryption Policy.`}</em>{` If the keys are for the strongest algorithm, then\nthe key must be split, each portion of the key encrypted with a\ndifferent key that is the longest key length authorized and the each\nencrypted portion is transmitted using different transmission\nmechanisms. The goal is to provide more stringent protection to the key\nthan the data that is encrypted with that encryption key.`}</p>\n    <p>{`Symmetric encryption keys, when at rest, must be protected with security\nmeasures at least as stringent as the measures used for distribution of\nthat key.`}</p>\n    <h3>{`Public Key Encryption Keys`}</h3>\n    <p>{`Public key cryptography, or asymmetric cryptography, uses public-private\nkey pairs. The public key is passed to the certificate authority to be\nincluded in the digital certificate issued to the end user. The digital\ncertificate is available to everyone once it issued. The private key\nshould only be available to the end user to whom the corresponding\ndigital certificate is issued.`}</p>\n    <h3>{`Data Migrators’ Public Key Infrastructure (PKI) Keys`}</h3>\n    <p>{`The public-private key pairs used by the Data Migrators’ public key\ninfrastructure (PKI) are generated on the tamper-resistant smart card\nissued to an individual end user. The private key associated with an end\nuser’s identity certificate, which are only used for digital signatures,\nwill never leave the smart card. This prevents the Infosec Team from\nescrowing any private keys associated with identity certificates. The\nprivate key associated with any encryption certificates, which are used\nto encrypt email and other documents, must be escrowed in compliance\nwith`}</p>\n    <h3>{`Data Migrators policies.`}</h3>\n    <p>{`Access to the private keys stored on a Data Migrators-issued smart card\nwill be protected by a personal identification number (PIN) known only\nto the individual to whom the smart card is issued. The smart card\nsoftware will be configured to require entering the PIN prior to any\nprivate key contained on the smart card being accessed.`}</p>\n    <h3>{`Other Public Key Encryption Keys`}</h3>\n    <p>{`Other types of keys may be generated in software on the end user’s\ncomputer and can be stored as files on the hard drive or on a hardware\ntoken. If the public-private key pair is generated on smartcard, the\nrequirements for protecting the private keys are the same as those for\nprivate keys associated with Data Migrators’ PKI. If the keys are\ngenerated in software, the end user is required to create at least one\nbackup of these keys and store any backup copies securely. The user is\nalso required to create an escrow copy of any private keys used for\nencrypting data and deliver the escrow copy to the local Information\nSecurity representative for secure storage.`}</p>\n    <p>{`The Infosec Team shall not escrow any private keys associated with\nidentity certificates. All backups, including escrow copies, shall be\nprotected with a password or passphrase that is compliant with Data Migrators’\n`}<em parentName=\"p\">{`Password Policy`}</em>{`. Infosec representatives will store and protect\nthe escrowed keys as described in the Data Migrators `}<em parentName=\"p\">{`Certificate\nPractice Statement Policy`}</em>{`.`}</p>\n    <h3>{`Commercial or Outside Organization Public Key Infrastructure (PKI) Keys`}</h3>\n    <p>{`In working with business partners, the relationship may require the end\nusers to use public-private key pairs that are generated in software on\nthe end user’s computer. In these cases, the public-private key pairs\nare stored in files on the hard drive of the end user. The private keys\nare only protected by the strength of the password or passphrase chosen\nby the end user. For example, when an end user requests a digital\ncertificate from a commercial PKI, such as VeriSign or Thawte, the end\nuser’s web browser will generate the key pair and submit the public key\nas part of the certificate request to the CA. The private key remains in\nthe browser’s certificate store where the only protection is the\npassword on the browser’s certificate store. A web browser storing\nprivate keys will be configured to require the user to enter the\ncertificate store password anytime a private key is accessed.`}</p>\n    <h3>{`PGP Key Pairs`}</h3>\n    <p>{`If the business partner requires the use of PGP, the public-private key\npairs can be stored in the user’s key ring files on the computer hard\ndrive or on a hardware token, for example, a USB drive or a smart card.\nSince the protection of the private keys is the passphrase on the secret\nkeying, it is preferable that the public-private keys are stored on a\nhardware token. PGP will be configured to require entering the\npassphrase for every use of the private keys in the secret key ring.`}</p>\n    <h3>{`Hardware and Virtual Token Storage`}</h3>\n    <p>{`Hardware tokens storing encryption keys will be treated as sensitive\ncompany equipment, as described in Data Migrators’ `}<em parentName=\"p\">{`Physical Security\npolicy`}</em>{`, when outside company offices. In addition, all hardware tokens,\nsmartcards, USB tokens, etc., will not be stored or left connected to\nany end user’s computer when not in use. For end users traveling with\nhardware tokens, they will not be stored or carried in the same\ncontainer or bag as any computer.`}</p>\n    <h3>{`Personal Identification Numbers (PINs), Passwords and Passphrases`}</h3>\n    <p>{`All PINs, passwords or passphrases used to protect encryption keys must\nmeet complexity and length requirements described in Data Migrators’\n`}<em parentName=\"p\">{`Password Policy.`}</em></p>\n    <h3>{`Loss and Theft`}</h3>\n    <p>{`The loss, theft, or potential unauthorized disclosure of any encryption\nkey covered by this policy must be reported immediately to The Infosec\nTeam. Infosec personnel will direct the end user in any actions that\nwill be required regarding revocation of certificates or public-private\nkey pairs.`}</p>\n    <h2>{`Policy Compliance`}</h2>\n    <h3>{`Compliance Measurement`}</h3>\n    <p>{`The Infosec team will verify compliance to this policy through various\nmethods, including but not limited to, periodic walk-thrus, video\nmonitoring, business tool reports, internal and external audits, and\nfeedback to the policy owner.`}</p>\n    <h2>{`Exceptions`}</h2>\n    <p>{`Any exception to the policy must be approved by the Infosec Team in\nadvance.`}</p>\n    <h2>{`Non-Compliance`}</h2>\n    <p>{`An employee found to have violated this policy may be subject to\ndisciplinary action, up to and including termination of employment.`}</p>\n    <h2>{`Related Documents`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Acceptable Encryption Policy`}</li>\n      <li parentName=\"ul\">{`Certificate Practice Statement Policy`}</li>\n      <li parentName=\"ul\">{`Password Policy`}</li>\n      <li parentName=\"ul\">{`Physical Security policy`}</li>\n    </ul>\n    <h2>{`Definitions and Terms`}</h2>\n    <p>{`The following definition and terms can be found in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.sans.org/security-resources/glossary-of-terms/\"\n      }}>{`SANS Glossary`}</a>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Certificate authority (CA)`}</li>\n      <li parentName=\"ul\">{`Digital certificate`}</li>\n      <li parentName=\"ul\">{`Digital signature`}</li>\n      <li parentName=\"ul\">{`Key escrow`}</li>\n      <li parentName=\"ul\">{`Plaintext`}</li>\n      <li parentName=\"ul\">{`Public key cryptography`}</li>\n      <li parentName=\"ul\">{`Public key pairs`}</li>\n      <li parentName=\"ul\">{`Symmetric cryptography`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["title","theme","tabs","className","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","React","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","_frontmatter","makeShortcode","name","console","warn","PageDescription","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"sourceRoot":""}